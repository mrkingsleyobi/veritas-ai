version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: veritasai-db
    environment:
      POSTGRES_DB: veritasai
      POSTGRES_USER: veritasai_user
      POSTGRES_PASSWORD: veritasai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veritasai_user -d veritasai"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:6
    container_name: veritasai-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: veritasai-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # VeritasAI Application
  app:
    build: .
    container_name: veritasai-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://veritasai_user:veritasai_password@db:5432/veritasai
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORAGE_ENDPOINT=minio:9000
      - STORAGE_ACCESS_KEY=minioadmin
      - STORAGE_SECRET_KEY=minioadmin
      - STORAGE_BUCKET_NAME=veritasai-content
      - SECRET_KEY=your_dev_secret_key_here
      - DEBUG=True
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
  minio_data: